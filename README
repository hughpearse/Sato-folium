############################################################
#	Hugh Pearse - Dublin Institute of Technology       #
#                                                          #
#	Title:                                             #
#	Image Recognition of Plant Leaves for              #
#	Species Identification                             #
############################################################

Requirements:
	Image-Magic		http://www.imagemagick.org/script/index.php
	Image-Magic Scripts	http://www.fmwconcepts.com/imagemagick/
	MySql			http://www.mysql.com/downloads/
	CentOS			http://www.centos.org/

Measureable leaf attributes:
	Unique Color Count
	Color Channel Standard Deviation (pixel quantity taken into account)
	Surface Area Ratio
	Width to Height Ratio
	Leaf parameter to surface area ratio
	Four point shape measurement

Design:
	If a search request needs to compare the request image to every leaf in a database then the amount of time taken to perform a search is O(n) which is linear in accordance to the size of the database because every leaf must be processed in order to find the least difference. If an attribute of the search request can help define a subset within the data to be searched, then this will reduce the time taken to O(n-!s). The search time can be reduced again by defining a key by which the subset can be sorted.

	A species should be represented by an attribute with the lowest variance. For example if every leaf in a given species had wild fluctuation in color but had a reliable surface area, then the surface area should be chosen as a means of identifying the species. This means that in order to have an accurate system there needs to be more cultivars than species. Every time a cultivar is added, the species needs to recalculate which attribute it is going to use to represent itself. Here is a sample ERD:

		[Species]-->[Cultivar]
		         -->[Cultivar]
		         -->[Cultivar]

	The system performs three steps to produce a list of probable species.
	1) First it takes all the attributes from the request and for each attribute it selects all plants within 10% of the value of the attribute.
	2) Then the system aggregates the selected data into a single result set. After that the system forces the result set to be no more than 10 results in length.
	3) The system then orders the 10 results by calculating the difference between the request and the 10 results. The 10 results are then sorted by their calculated difference. This final step is a sorting algorithm that uses normalized Euclidean distance. Take 2 attributes from your search sX and sY. Take 2 attributes from your search results called rX and rY. You then calculate the total difference between attributes of the search request and the attributes of the first search result. We calculate the difference using the following formas sX-rX=|dX| and sY-rY=|dY|. The total difference is |Total|=|dX|+|dY|. Here is an example:

		search: sX=1 and sY=10
		result: rX=2 and rY=5
		subtraction: sX-rX=|dX| and sY-rY=|dY|
				1-2=|-1| and 10-5=|5|
		difference: dX=1 and dY=5
		total difference: dX+dY=|Total|
				1+5=|6|

Datasets:
	Flavia Dataset (33 species, 1GB):
	https://sourceforge.net/projects/flavia/files/Leaf%20Image%20Dataset/1.0/Leaves.tar.bz2/download

	Leaf-Recognition Dataset (92 species, 4MB):
	http://leaf-recognition.googlecode.com/files/dataset.zip

	Leaf Snap (164 species, 13MB)
	http://leafsnap.com/species/

Software:
	Flavia
	http://flavia.sourceforge.net/
	
	Leaf Snap
	http://leafsnap.com/
	
	John Flanagan - project Maple
	https://github.com/johnflan/Maple
	
	LeafAnalyser
	http://leafanalyser.openillusionist.org.uk/
	
	Leaves Recognition v1.0
	http://sourceforge.net/projects/lrecog/
	
	ePlantAnalyzer
	http://www.youtube.com/watch?v=ShN_0hqnyM0
	
	Lamina
	http://sourceforge.net/projects/lamina/
	
	leaf-recognition
	http://code.google.com/p/leaf-recognition/
	
	kfulles
	http://code.google.com/p/kfulles/
	
	calms
	http://code.google.com/p/clams/
	
	Silva
	https://github.com/ogrisel/silva
